{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  const trimmedEmail = email.trim();\n  const trimmedPassword = password.trim();\n  console.log('Submitting login request with:', {\n    email: trimmedEmail,\n    password: trimmedPassword\n  });\n  try {\n    const response = await fetch('http://localhost:4243/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: trimmedEmail,\n        password: trimmedPassword\n      })\n    });\n    const data = await response.json();\n    console.log('Login response data:', data);\n    if (response.ok) {\n      console.log('Login successful');\n      onLogin(data.plan);\n      setError(''); // Clear any errors\n    } else {\n      console.error('Login failed:', data.error);\n      setError(data.error);\n    }\n  } catch (error) {\n    console.error('Error during login request:', error);\n    setError('An error occurred. Please try again later.');\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","trimmedEmail","email","trim","trimmedPassword","password","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","ok","onLogin","plan","setError","error"],"sources":["/Users/ismaelanwarzai/Desktop/SOTD/web/src/core/components/LoginPage.js"],"sourcesContent":["const handleSubmit = async (e) => {\n  e.preventDefault();\n  const trimmedEmail = email.trim();\n  const trimmedPassword = password.trim();\n\n  console.log('Submitting login request with:', { email: trimmedEmail, password: trimmedPassword });\n\n  try {\n    const response = await fetch('http://localhost:4243/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email: trimmedEmail, password: trimmedPassword }),\n    });\n\n    const data = await response.json();\n    console.log('Login response data:', data);\n\n    if (response.ok) {\n      console.log('Login successful');\n      onLogin(data.plan);\n      setError(''); // Clear any errors\n    } else {\n      console.error('Login failed:', data.error);\n      setError(data.error);\n    }\n  } catch (error) {\n    console.error('Error during login request:', error);\n    setError('An error occurred. Please try again later.');\n  }\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,MAAMC,YAAY,GAAGC,KAAK,CAACC,IAAI,CAAC,CAAC;EACjC,MAAMC,eAAe,GAAGC,QAAQ,CAACF,IAAI,CAAC,CAAC;EAEvCG,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAE;IAAEL,KAAK,EAAED,YAAY;IAAEI,QAAQ,EAAED;EAAgB,CAAC,CAAC;EAEjG,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ,KAAK,EAAED,YAAY;QAAEI,QAAQ,EAAED;MAAgB,CAAC;IACzE,CAAC,CAAC;IAEF,MAAMW,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCV,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEQ,IAAI,CAAC;IAEzC,IAAIP,QAAQ,CAACS,EAAE,EAAE;MACfX,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BW,OAAO,CAACH,IAAI,CAACI,IAAI,CAAC;MAClBC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB,CAAC,MAAM;MACLd,OAAO,CAACe,KAAK,CAAC,eAAe,EAAEN,IAAI,CAACM,KAAK,CAAC;MAC1CD,QAAQ,CAACL,IAAI,CAACM,KAAK,CAAC;IACtB;EACF,CAAC,CAAC,OAAOA,KAAK,EAAE;IACdf,OAAO,CAACe,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnDD,QAAQ,CAAC,4CAA4C,CAAC;EACxD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}