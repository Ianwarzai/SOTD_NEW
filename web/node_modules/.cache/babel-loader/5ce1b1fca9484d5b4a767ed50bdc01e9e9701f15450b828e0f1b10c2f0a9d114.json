{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelanwarzai/Desktop/SOTD/web/src/StockDataFetcher.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport yahooFinance from 'yahoo-finance';\n\n// Fetch S&P 500 tickers from Wikipedia\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchSp500Tickers = async () => {\n  const url = \"https://en.wikipedia.org/wiki/List_of_S%26P_500_companies\";\n  const response = await axios.get(url);\n  const table = new DOMParser().parseFromString(response.data, 'text/html').querySelector('table');\n  return Array.from(table.querySelectorAll('tbody tr')).map(row => row.querySelector('td').textContent.trim());\n};\n\n// Fetch penny stock tickers from a CSV file\nconst fetchPennyStockTickers = async () => {\n  const response = await axios.get('/path/to/penny_stocks.csv');\n  return response.data.split('\\n').map(line => line.trim());\n};\n\n// Fetch stock data from Yahoo Finance\nconst fetchStockData = async ticker => {\n  try {\n    const data = await yahooFinance.historical({\n      symbol: ticker,\n      from: '2023-01-01',\n      to: '2023-12-31'\n    });\n    if (data.length === 0) return null;\n    const stock = await yahooFinance.quote({\n      symbol: ticker,\n      modules: ['price', 'summaryDetail']\n    });\n    const info = stock.price;\n    const prices = data.map(entry => entry.close);\n    const volumes = data.map(entry => entry.volume);\n    const sma = (data, window) => data.slice(window - 1).map((_, idx) => data.slice(idx, idx + window).reduce((sum, val) => sum + val, 0) / window);\n    const rsi = (data, window) => {\n      const gain = data.map((val, idx) => idx === 0 ? 0 : Math.max(val - data[idx - 1], 0));\n      const loss = data.map((val, idx) => idx === 0 ? 0 : Math.max(data[idx - 1] - val, 0));\n      const avgGain = sma(gain, window);\n      const avgLoss = sma(loss, window);\n      return avgGain.map((gain, idx) => 100 - 100 / (1 + gain / avgLoss[idx]));\n    };\n    const bb = (data, window) => {\n      const sma20 = sma(data, window);\n      const stddev20 = sma20.map((_, idx) => {\n        const mean = sma20[idx];\n        return Math.sqrt(data.slice(idx, idx + window).reduce((sum, val) => sum + Math.pow(val - mean, 2), 0) / window);\n      });\n      return {\n        upper: sma20.map((mean, idx) => mean + 2 * stddev20[idx]),\n        lower: sma20.map((mean, idx) => mean - 2 * stddev20[idx])\n      };\n    };\n    const sma50 = sma(prices, 50);\n    const sma200 = sma(prices, 200);\n    const rsi14 = rsi(prices, 14);\n    const {\n      upper: upperBB,\n      lower: lowerBB\n    } = bb(prices, 20);\n    return {\n      ticker,\n      name: info.longName || 'N/A',\n      volume: volumes[volumes.length - 1],\n      price: prices[prices.length - 1],\n      market_cap: info.marketCap || 0,\n      pe_ratio: info.trailingPE || 'N/A',\n      change_percent: (prices[prices.length - 1] - prices[0]) / prices[0] * 100,\n      '50_MA': sma50[sma50.length - 1],\n      '200_MA': sma200[sma200.length - 1],\n      RSI: rsi14[rsi14.length - 1],\n      Upper_BB: upperBB[upperBB.length - 1],\n      Lower_BB: lowerBB[lowerBB.length - 1]\n    };\n  } catch (error) {\n    console.error(`Error fetching data for ${ticker}:`, error);\n    return null;\n  }\n};\nconst StockDataFetcher = () => {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const sp500Tickers = await fetchSp500Tickers();\n        const pennyTickers = await fetchPennyStockTickers();\n        const tickers = [...sp500Tickers, ...pennyTickers];\n        const dataPromises = tickers.map(ticker => fetchStockData(ticker));\n        const results = await Promise.all(dataPromises);\n        const validResults = results.filter(result => result !== null);\n        setStockData(validResults);\n      } catch (error) {\n        console.error('Error fetching the stock data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: stockData.map((stock, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ticker: \", stock.ticker]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", stock.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Volume: \", stock.volume.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", stock.price < 0.01 ? stock.price.toFixed(6) : stock.price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Market Cap: \", formatMarketCap(stock.market_cap)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"P/E Ratio: \", stock.pe_ratio]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Change Percent: \", stock.change_percent.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"50 MA: \", stock['50_MA']]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"200 MA: \", stock['200_MA']]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"RSI: \", stock.RSI]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Upper BB: \", stock.Upper_BB]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Lower BB: \", stock.Lower_BB]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(StockDataFetcher, \"UHMRx5rd6U+J7YyAJ82PYuAdhyc=\");\n_c = StockDataFetcher;\nconst formatMarketCap = marketCap => {\n  if (marketCap >= 1000000000000) {\n    return (marketCap / 1000000000000).toFixed(2) + 'T';\n  } else if (marketCap >= 1000000000) {\n    return (marketCap / 1000000000).toFixed(2) + 'B';\n  } else if (marketCap >= 1000000) {\n    return (marketCap / 1000000).toFixed(2) + 'M';\n  } else {\n    return marketCap.toLocaleString();\n  }\n};\nexport default StockDataFetcher;\nvar _c;\n$RefreshReg$(_c, \"StockDataFetcher\");","map":{"version":3,"names":["React","useState","useEffect","axios","yahooFinance","jsxDEV","_jsxDEV","fetchSp500Tickers","url","response","get","table","DOMParser","parseFromString","data","querySelector","Array","from","querySelectorAll","map","row","textContent","trim","fetchPennyStockTickers","split","line","fetchStockData","ticker","historical","symbol","to","length","stock","quote","modules","info","price","prices","entry","close","volumes","volume","sma","window","slice","_","idx","reduce","sum","val","rsi","gain","Math","max","loss","avgGain","avgLoss","bb","sma20","stddev20","mean","sqrt","pow","upper","lower","sma50","sma200","rsi14","upperBB","lowerBB","name","longName","market_cap","marketCap","pe_ratio","trailingPE","change_percent","RSI","Upper_BB","Lower_BB","error","console","StockDataFetcher","_s","stockData","setStockData","fetchData","sp500Tickers","pennyTickers","tickers","dataPromises","results","Promise","all","validResults","filter","result","children","fileName","_jsxFileName","lineNumber","columnNumber","index","toLocaleString","toFixed","formatMarketCap","_c","$RefreshReg$"],"sources":["/Users/ismaelanwarzai/Desktop/SOTD/web/src/StockDataFetcher.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport yahooFinance from 'yahoo-finance';\n\n// Fetch S&P 500 tickers from Wikipedia\nconst fetchSp500Tickers = async () => {\n  const url = \"https://en.wikipedia.org/wiki/List_of_S%26P_500_companies\";\n  const response = await axios.get(url);\n  const table = new DOMParser().parseFromString(response.data, 'text/html').querySelector('table');\n  return Array.from(table.querySelectorAll('tbody tr')).map(row => row.querySelector('td').textContent.trim());\n};\n\n// Fetch penny stock tickers from a CSV file\nconst fetchPennyStockTickers = async () => {\n  const response = await axios.get('/path/to/penny_stocks.csv');\n  return response.data.split('\\n').map(line => line.trim());\n};\n\n// Fetch stock data from Yahoo Finance\nconst fetchStockData = async (ticker) => {\n  try {\n    const data = await yahooFinance.historical({ symbol: ticker, from: '2023-01-01', to: '2023-12-31' });\n    if (data.length === 0) return null;\n\n    const stock = await yahooFinance.quote({ symbol: ticker, modules: ['price', 'summaryDetail'] });\n    const info = stock.price;\n\n    const prices = data.map(entry => entry.close);\n    const volumes = data.map(entry => entry.volume);\n\n    const sma = (data, window) => data.slice(window - 1).map((_, idx) => (\n      data.slice(idx, idx + window).reduce((sum, val) => sum + val, 0) / window\n    ));\n    const rsi = (data, window) => {\n      const gain = data.map((val, idx) => idx === 0 ? 0 : Math.max(val - data[idx - 1], 0));\n      const loss = data.map((val, idx) => idx === 0 ? 0 : Math.max(data[idx - 1] - val, 0));\n\n      const avgGain = sma(gain, window);\n      const avgLoss = sma(loss, window);\n\n      return avgGain.map((gain, idx) => 100 - (100 / (1 + (gain / avgLoss[idx]))));\n    };\n\n    const bb = (data, window) => {\n      const sma20 = sma(data, window);\n      const stddev20 = sma20.map((_, idx) => {\n        const mean = sma20[idx];\n        return Math.sqrt(data.slice(idx, idx + window).reduce((sum, val) => sum + Math.pow(val - mean, 2), 0) / window);\n      });\n\n      return {\n        upper: sma20.map((mean, idx) => mean + 2 * stddev20[idx]),\n        lower: sma20.map((mean, idx) => mean - 2 * stddev20[idx])\n      };\n    };\n\n    const sma50 = sma(prices, 50);\n    const sma200 = sma(prices, 200);\n    const rsi14 = rsi(prices, 14);\n    const { upper: upperBB, lower: lowerBB } = bb(prices, 20);\n\n    return {\n      ticker,\n      name: info.longName || 'N/A',\n      volume: volumes[volumes.length - 1],\n      price: prices[prices.length - 1],\n      market_cap: info.marketCap || 0,\n      pe_ratio: info.trailingPE || 'N/A',\n      change_percent: ((prices[prices.length - 1] - prices[0]) / prices[0]) * 100,\n      '50_MA': sma50[sma50.length - 1],\n      '200_MA': sma200[sma200.length - 1],\n      RSI: rsi14[rsi14.length - 1],\n      Upper_BB: upperBB[upperBB.length - 1],\n      Lower_BB: lowerBB[lowerBB.length - 1]\n    };\n  } catch (error) {\n    console.error(`Error fetching data for ${ticker}:`, error);\n    return null;\n  }\n};\n\nconst StockDataFetcher = () => {\n  const [stockData, setStockData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const sp500Tickers = await fetchSp500Tickers();\n        const pennyTickers = await fetchPennyStockTickers();\n        const tickers = [...sp500Tickers, ...pennyTickers];\n\n        const dataPromises = tickers.map(ticker => fetchStockData(ticker));\n        const results = await Promise.all(dataPromises);\n\n        const validResults = results.filter(result => result !== null);\n        setStockData(validResults);\n      } catch (error) {\n        console.error('Error fetching the stock data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1>Stock Data</h1>\n      <ul>\n        {stockData.map((stock, index) => (\n          <li key={index}>\n            <p>Ticker: {stock.ticker}</p>\n            <p>Name: {stock.name}</p>\n            <p>Volume: {stock.volume.toLocaleString()}</p>\n            <p>Price: {stock.price < 0.01 ? stock.price.toFixed(6) : stock.price.toFixed(2)}</p>\n            <p>Market Cap: {formatMarketCap(stock.market_cap)}</p>\n            <p>P/E Ratio: {stock.pe_ratio}</p>\n            <p>Change Percent: {stock.change_percent.toFixed(2)}%</p>\n            <p>50 MA: {stock['50_MA']}</p>\n            <p>200 MA: {stock['200_MA']}</p>\n            <p>RSI: {stock.RSI}</p>\n            <p>Upper BB: {stock.Upper_BB}</p>\n            <p>Lower BB: {stock.Lower_BB}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst formatMarketCap = (marketCap) => {\n  if (marketCap >= 1_000_000_000_000) {\n    return (marketCap / 1_000_000_000_000).toFixed(2) + 'T';\n  } else if (marketCap >= 1_000_000_000) {\n    return (marketCap / 1_000_000_000).toFixed(2) + 'B';\n  } else if (marketCap >= 1_000_000) {\n    return (marketCap / 1_000_000).toFixed(2) + 'M';\n  } else {\n    return marketCap.toLocaleString();\n  }\n};\n\nexport default StockDataFetcher;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}